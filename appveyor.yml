#---------------------------------# 
#      environment configuration  # 
#---------------------------------# 
version: 2.0.{build}.0
image: Visual Studio 2019
skip_commits:
  files:
        - ReadMe.md

install: 
#   - git clone https://github.com/PowerShell/DscResource.Tests
    - ps: |
        Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force
        Install-Module -Name Pester -Repository PSGallery -Force
        choco pack -d

#---------------------------------# 
#      build configuration        # 
#---------------------------------# 

build: false

#---------------------------------# 
#      test configuration         # 
#---------------------------------# 

test_script:
    - ps: |
        $outputFile = ".\Pester-Tests.xml"
        .\WinSecurityBaseline.Pester.ps1 -OutputFormat "NUnitXml"
        (New-Object 'System.Net.WebClient').UploadFile("https://ci.appveyor.com/api/testresults/nunit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $outputFile))
    
#---------------------------------# 
#      deployment configuration   # 
#---------------------------------# 

# scripts to run before deployment 
#deploy_script: 
#  - ps: |
#      # Creating project artifact
#      $stagingDirectory = (Resolve-Path ..).Path
#      $manifest = Join-Path $pwd "xSmbShare.psd1"
#      (Get-Content $manifest -Raw).Replace("2.0.0.0", $env:APPVEYOR_BUILD_VERSION) | Out-File $manifest
#      $zipFilePath = Join-Path $stagingDirectory "$(Split-Path $pwd -Leaf).zip"
#      Add-Type -assemblyname System.IO.Compression.FileSystem
#      [System.IO.Compression.ZipFile]::CreateFromDirectory($pwd, $zipFilePath)
#      
#      # Creating NuGet package artifact
#      New-Nuspec -packageName $env:APPVEYOR_PROJECT_NAME -version $env:APPVEYOR_BUILD_VERSION -author "Microsoft" -owners "Microsoft" -licenseUrl "https://github.com/PowerShell/DscResources/blob/master/LICENSE" -projectUrl "https://github.com/$($env:APPVEYOR_REPO_NAME)" -packageDescription $env:APPVEYOR_PROJECT_NAME -tags "DesiredStateConfiguration DSC DSCResourceKit" -destinationPath .
#      nuget pack ".\$($env:APPVEYOR_PROJECT_NAME).nuspec" -outputdirectory .
#      $nuGetPackageName = $env:APPVEYOR_PROJECT_NAME + "." + $env:APPVEYOR_BUILD_VERSION + ".nupkg"
#      $nuGetPackagePath = (Get-ChildItem $nuGetPackageName).FullName
#      
#      @(
#          # You can add other artifacts here
#          $zipFilePath,
#          $nuGetPackagePath
#      ) | % { 
#          Write-Host "Pushing package $_ as Appveyor artifact"
#          Push-AppveyorArtifact $_
#        }
